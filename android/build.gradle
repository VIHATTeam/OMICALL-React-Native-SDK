buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["OmikitPlugin_kotlinVersion"]

  repositories {
    google()
    mavenCentral()
    maven {
      url("https://vihatgroup.jfrog.io/artifactory/omi-voice/")
      credentials {
        username = "downloader"
        password = "Omi@2022"
      }
    }
  }

  dependencies {
    classpath 'com.android.tools.build:gradle-api:7.1.2'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath 'com.google.dagger:hilt-android-gradle-plugin:2.39.1'
    classpath 'com.github.kezong:fat-aar:1.3.8'
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.29.3"
    classpath 'com.android.tools.build:gradle:4.0.0'
  }
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'


if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["OmikitPlugin_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["OmikitPlugin_" + name]).toInteger()
}

android {
  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")
    buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
  }
  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  // kotlinOptions {
  //     jvmTarget = '1.8'
  // }

  dataBinding {
    enabled = true
  }
}

allprojects {
  repositories {
    google()
    mavenCentral()
    jcenter() // Warning: this repository is going to shut down soon
    maven {
        url "https://gitlab.com/api/v4/projects/47675059/packages/maven"
        credentials(HttpHeaderCredentials) {
            name = "Private-Token"
            value = "glpat-AzyyrvKz9_pjsgGW4xfp"
        }
        authentication {
            header(HttpHeaderAuthentication)
        }
    }
  }
}


def kotlin_version = getExtOrDefault("kotlinVersion")

dependencies {
  // For < 0.71, this will be from the local maven repo
  // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
  // noinspection GradleDynamicVersion
  // implementation "com.facebook.react:react-native"
  api 'vn.vihat.omicall:omi-sdk:2.1.46'

  implementation "com.facebook.react:react-native:+" // From node_modules
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  // implementation("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
  // implementation fileTree(include: ['*.jar'], dir: 'libs')
  // implementation files('OmiSDK.aar')
  implementation "com.google.android.flexbox:flexbox:3.0.0"
  implementation "androidx.appcompat:appcompat:1.6.1"
  implementation "androidx.lifecycle:lifecycle-process:2.6.1"
  implementation "com.google.android.material:material:1.9.0"
  implementation 'com.google.firebase:firebase-messaging-ktx:23.1.2'
  implementation("com.squareup.retrofit2:retrofit:2.9.0") {
    exclude module: 'okhttp'
  }
  implementation "com.squareup.retrofit2:converter-gson:2.9.0"
  implementation "com.squareup.okhttp3:okhttp:4.9.1"  
  implementation "com.squareup.okhttp3:okhttp-urlconnection:4.9.1"
  implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"
  implementation "com.google.code.gson:gson:2.8.9"

  implementation "androidx.security:security-crypto:1.1.0-alpha06"


  implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.8.0"))
  implementation "com.github.bumptech.glide:glide:4.15.1"
  annotationProcessor "com.github.bumptech.glide:compiler:4.15.1"
  implementation("androidx.work:work-runtime:2.8.1")

  def coroutines_version = '1.7.2'
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

}

if (isNewArchitectureEnabled()) {
  react {
    jsRootDir = file("../src/")
    libraryName = "OmikitPlugin"
    codegenJavaPackageName = "com.omikitplugin"
  }
}
