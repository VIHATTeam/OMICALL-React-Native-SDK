// buildscript {
//   // Buildscript is evaluated before everything else so we can't use getExtOrDefault
//   def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["OmikitPlugin_kotlinVersion"]

//   repositories {
//     google()
//     mavenCentral()
//     // maven {
//     //   url("https://vihatgroup.jfrog.io/artifactory/omi-voice/")
//     //   credentials {
//     //     username = "downloader"
//     //     password = "Omi@2022"
//     //   }
//     // }
//   }

//   dependencies {
//     classpath 'com.android.tools.build:gradle-api:7.1.2'
//     classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//     classpath 'com.google.dagger:hilt-android-gradle-plugin:2.39.1'
//     classpath 'com.github.kezong:fat-aar:1.3.8'
//     classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.29.3"
//     classpath 'com.android.tools.build:gradle:4.0.0'
//   }
// }

buildscript {
    ext {
        kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["OmikitPlugin_kotlinVersion"]
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:8.1.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.39.1'
        classpath 'com.github.kezong:fat-aar:1.3.8'
    }
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'


if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["OmikitPlugin_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["OmikitPlugin_" + name]).toInteger()
}

android {
  namespace "com.omikitplugin"
  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")
    buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
  }
   buildFeatures {
        buildConfig = true
    }


  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_17
    targetCompatibility JavaVersion.VERSION_17
  }


    kotlinOptions {
        jvmTarget = "17"
    }


  dataBinding {
    enabled = true
  }
}


tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "17"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7"
}



def kotlin_version = getExtOrDefault("kotlinVersion")

dependencies {

  // use for OMISDK
  implementation("androidx.work:work-runtime:2.8.1")
  implementation "androidx.security:security-crypto:1.1.0-alpha06"
  // api 'vn.vihat.omicall:omi-sdk:2.3.23'
  api "io.omicrm.vihat:omi-sdk:2.3.88"

  implementation "com.facebook.react:react-native:+" // From node_modules
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation "com.google.android.flexbox:flexbox:3.0.0"
  implementation "androidx.appcompat:appcompat:1.6.1"
  implementation "androidx.lifecycle:lifecycle-process:2.6.1"
  implementation "com.google.android.material:material:1.9.0"
  implementation "com.google.firebase:firebase-messaging-ktx:23.1.2"
  implementation("com.squareup.retrofit2:retrofit:2.9.0") {
    exclude module: 'okhttp'
  }
  implementation "com.squareup.retrofit2:converter-gson:2.9.0"
  implementation "com.squareup.okhttp3:okhttp:4.9.1"
  implementation "com.squareup.okhttp3:okhttp-urlconnection:4.9.1"
  implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"
  implementation "com.google.code.gson:gson:2.8.9"

  implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.8.0"))
  implementation "com.squareup.picasso:picasso:2.8"

  def coroutines_version = '1.7.2'
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

}

if (isNewArchitectureEnabled()) {
  react {
    jsRootDir = file("../src/")
    libraryName = "OmikitPlugin"
    codegenJavaPackageName = "com.omikitplugin"
  }
}
